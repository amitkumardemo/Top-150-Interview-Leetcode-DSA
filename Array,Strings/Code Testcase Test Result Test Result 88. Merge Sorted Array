class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        // Pointers to the last elements of nums1 and nums2
        int i =  m - 1;  // Last element of the first m elements in nums1
        int j = n - 1;    // Last element of nums2
        int k = m + n - 1; // Last position in nums1 (considering total length)

        // Start merging from the end to avoid overwriting elements in nums1
        while (j >= 0) {  // Iterate till nums2 is completely merged
            if (i >= 0 && nums1[i] > nums2[j]) { 
                // If nums1[i] is greater, place it at the end of nums1
                nums1[k] = nums1[i];
                i--; // Move pointer in nums1
            } else { 
                // Otherwise, place nums2[j] at the end of nums1
                nums1[k] = nums2[j];
                j--; // Move pointer in nums2
            }
            k--; // Move backward in nums1 for the next placement
        } 
    }
}
